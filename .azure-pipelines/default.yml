# Variable Group 'ControlR' was defined in the Variables tab
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
  batch: True
name: $(MajorBuild).$(MinorBuild).$(Rev:r).0
jobs:
  - job: Mac_AppleSilicon_Build
    displayName: Apple Build
    pool:
      vmImage: macos-latest
    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - task: Bash@3
        displayName: Publish ControlR.Agent (ARM64)
        inputs:
          targetType: 'inline'
          script: |
            dotnet publish -c Release -r osx-arm64 -o "$(Build.SourcesDirectory)/ControlR.Agent/bin/publish/osx-arm64/" -p:PublishSingleFile=true -p:UseAppHost=true -p:Version=$(Build.BuildNumber) -p:FileVersion=$(Build.BuildNumber) -p:IncludeAllContentForSelfExtract=true -p:EnableCompressionInSingleFile=true -p:IncludeAppSettingsInSingleFile=true
            sudo codesign --force --deep --sign - "$(Build.SourcesDirectory)/ControlR.Agent/bin/publish/osx-arm64/ControlR.Agent"
          workingDirectory: '$(Build.SourcesDirectory)/ControlR.Agent'

      - task: Bash@3
        displayName: Publish ControlR.Agent (x64)
        inputs:
          targetType: 'inline'
          script: |
            dotnet publish -c Release -r osx-x64 -o "$(Build.SourcesDirectory)/ControlR.Agent/bin/publish/osx-x64/" -p:PublishSingleFile=true -p:UseAppHost=true -p:Version=$(Build.BuildNumber) -p:FileVersion=$(Build.BuildNumber) -p:IncludeAllContentForSelfExtract=true -p:EnableCompressionInSingleFile=true -p:IncludeAppSettingsInSingleFile=true
            sudo codesign --force --deep --sign - "$(Build.SourcesDirectory)/ControlR.Agent/bin/publish/osx-x64/ControlR.Agent"
          workingDirectory: '$(Build.SourcesDirectory)/ControlR.Agent'

      - task: PublishPipelineArtifact@1
        displayName: Publish Agent (macOS ARM64)
        inputs:
          targetPath: ControlR.Agent/bin/publish/osx-arm64/ControlR.Agent
          artifact: Agent-macOS-ARM64
          publishLocation: pipeline

      - task: PublishPipelineArtifact@1
        displayName: Publish Agent (macOS x64)
        inputs:
          targetPath: ControlR.Agent/bin/publish/osx-x64/ControlR.Agent
          artifact: Agent-macOS-x64
          publishLocation: pipeline

  - job: Windows_Build
    displayName: Windows Build
    dependsOn: Mac_AppleSilicon_Build
    pool:
      name: Default
      #vmImage: windows-latest
    steps:
      - checkout: self
        clean: true
        fetchDepth: 3

      - task: DotNetCoreCLI@2
        displayName: Run Tests
        inputs:
          command: test
          projects: "**/Tests/**/*Tests.csproj"

      - task: DownloadPipelineArtifact@2
        displayName: Download macOS ARM64 Agent
        inputs:
          buildType: current
          artifactName: Agent-macOS-ARM64
          targetPath: $(Build.SourcesDirectory)\ControlR.Web.Server\wwwroot\downloads\osx-arm64\

      - task: DownloadPipelineArtifact@2
        displayName: Download macOS x64 Agent
        inputs:
          buildType: current
          artifactName: Agent-macOS-x64
          targetPath: $(Build.SourcesDirectory)\ControlR.Web.Server\wwwroot\downloads\osx-x64\

      - task: PowerShell@2
        displayName: Invoke Build.ps1
        inputs:
          filePath: .build/Build.ps1
          arguments: -SignToolPath "$(SignToolPath)" -CertificateThumbprint "$(CertificateThumbprint)" -OutputPath "$(Build.SourcesDirectory)\ControlR.Server\bin\publish" -CurrentVersion "$(Build.BuildNumber)" -BuildAgent -BuildStreamer
          pwsh: true

      - task: PowerShell@2
        displayName: Verify Agent Binaries
        inputs:
          targetType: inline
          script: |
            $TestPaths = @(
              "$(Build.SourcesDirectory)\ControlR.Server\bin\publish\wwwroot\downloads\AgentVersion.txt",
              "$(Build.SourcesDirectory)\ControlR.Server\bin\publish\wwwroot\downloads\win-x86\ControlR.Agent.exe",
              "$(Build.SourcesDirectory)\ControlR.Server\bin\publish\wwwroot\downloads\win-x86\ControlR.Streamer.zip",
              "$(Build.SourcesDirectory)\ControlR.Server\bin\publish\wwwroot\downloads\linux-x64\ControlR.Agent",
              "$(Build.SourcesDirectory)\ControlR.Server\bin\publish\wwwroot\downloads\osx-arm64\ControlR.Agent",
              "$(Build.SourcesDirectory)\ControlR.Server\bin\publish\wwwroot\downloads\osx-x64\ControlR.Agent"
            )
            foreach ($TestPath in $TestPaths) {
              if (!(Test-Path $TestPath)) {
                Write-Error "$TestPath not found."
                exit 1
              }
            }

      - task: PublishPipelineArtifact@1
        displayName: Publish Server
        inputs:
          targetPath: ControlR.Server\bin\publish
          artifact: Server
          publishLocation: pipeline
      
      - task: PublishPipelineArtifact@1
        displayName: Publish Build Scripts
        inputs:
          targetPath: .build\
          publishLocation: pipeline
          artifact: BuildScripts

      - task: PublishPipelineArtifact@1
        displayName: Publish docker-compose.yml
        inputs:
          targetPath: docker-compose\
          publishLocation: pipeline
          artifact: DockerCompose