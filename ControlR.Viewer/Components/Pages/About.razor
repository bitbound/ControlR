@page "/about"
@inject IVersionTracking VersionTracking
@inject IVersionApi VersionApi
@inject ILogger<About> Logger
@inject ISnackbar Snackbar
@inject IEnvironmentHelper EnvironmentHelper
@inject IUpdateManager UpdateManager
@inject ISettings Settings
@inject IDialogService Dialogs
@inject IStoreIntegration StoreIntegration
@inject IAppState AppState
@inject IBrowser Browser

<PageTitle>About</PageTitle>

<MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom>
    About
</MudText>


<div class="about-grid">
    <div>
        <MudText Color="Color.Primary">
            Version:
        </MudText>
    </div>
    <div class="d-flex align-start">
        <MudText>
            @(VersionTracking.CurrentVersion)
        </MudText>

        @if (_updateAvailable)
        {
            <MudLink Href="@_downloadLink" Target="_blank" Typo="Typo.caption" Class="ms-3" Color="Color.Info">
                Download Update
            </MudLink>

            <MudLink Target="_blank" Typo="Typo.caption" Class="ms-3" Color="Color.Info" OnClick="InstallUpdate">
                Install Update
            </MudLink>
        }

    </div>

    <div>
        <MudText Color="Color.Primary">
            License:
        </MudText>
    </div>
    <div>
        <MudLink Href="https://github.com/bitbound/ControlR/blob/main/LICENSE.txt" Target="_blank">
            GNU General Public License v3.0
        </MudLink>
    </div>

    <div>
        <MudText Color="Color.Primary">
            Project:
        </MudText>
    </div>
    <div>
        <MudLink Href="https://github.com/bitbound/controlr" Target="_blank">
            https://github.com/bitbound/controlr
        </MudLink>
    </div>

    <div>
        <MudText Color="Color.Primary">
            Website:
        </MudText>
    </div>
    <div>
        <MudLink Href="https://controlr.app" Target="_blank">
            https://controlr.app
        </MudLink>
    </div>

    <div>
        <MudText Color="Color.Primary">
            Open-Source:
        </MudText>
    </div>

    <div>
        <div class="mb-4">
            <MudText GutterBottom>
                ControlR uses the following open-source software and libraries.
            </MudText>
        </div>

        <MudText Class="mb-2">
            MudBlazor
            <MudLink Href="https://github.com/MudBlazor/MudBlazor" Class="ms-4 me-2">source</MudLink>
            <MudLink Href="https://github.com/MudBlazor/MudBlazor/blob/dev/LICENSE">license</MudLink>
        </MudText>
    </div>
</div>

@code {
    private bool _updateAvailable;
    private Uri? _storePageUri;
    private string _downloadLink = "";


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await SetUris();

        var checkResult = await UpdateManager.CheckForUpdate();
        if (!checkResult.IsSuccess)
        {
            Snackbar.Add("Failed to check for new versions", Severity.Error);
            return;
        }

        _updateAvailable = checkResult.Value;
    }

    private async Task InstallUpdate()
    {
        if (AppState.IsStoreIntegrationEnabled)
        {
            if (_storePageUri is null)
            {
                return;
            }

            await Browser.OpenAsync(_storePageUri);
            return;
        }

        Snackbar.Add("Downloading update", Severity.Info);
        var installResult = await UpdateManager.InstallCurrentVersion();
        if (!installResult.IsSuccess)
        {
            Snackbar.Add(installResult.Reason, Severity.Error);
        }
        else
        {
            Snackbar.Add("Launching installer", Severity.Success);
        }
    }

    private async Task SetUris()
    {
        try
        {
            if (!AppState.IsStoreIntegrationEnabled)
            {
                _downloadLink = Settings.ViewerDownloadUri;
                return;
            }
            _storePageUri = await StoreIntegration.GetStorePageUri();
            _downloadLink = _storePageUri.ToString();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error while getting store page URI.");
            Snackbar.Add("Failed to get store page URI.", Severity.Error);
        }
    }
}
