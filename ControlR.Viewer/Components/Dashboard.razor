@if (!DeviceCache.Devices.Any())
{
    <MudAlert Severity="Severity.Info">
        No devices found.  Head over to the <MudLink Href="/deploy">Deploy Page</MudLink>
        to install an agent!
    </MudAlert>
}

<MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom>
    Devices
</MudText>

<div>
    <MudCheckBox T="bool"
                 Value="Settings.HideOfflineDevices"
                 ValueChanged="HideOfflineDevicesChanged"
                 Label="Hide Offline Devices"
                 Disabled="IsHideOfflineDevicesDisabled"/>
</div>

<MudDataGrid T="DeviceDto"
             Items="FilteredDevices"
             SortMode="SortMode.Multiple"
             QuickFilter="QuickFilter"
             Loading="_loading"
             Hideable="true"
             SortDefinitions="_sortDefinitions"
             ShowColumnOptions="true"
             Filterable="true">

    <ToolBarContent>
        <MudSpacer />
        <MudTextField 
            @bind-Value="_searchText" 
            Placeholder="Search" 
            Clearable
            Adornment="Adornment.Start" 
            Immediate
            DebounceInterval="500"
            AdornmentIcon="@Icons.Material.Filled.Search" 
            IconSize="Size.Medium"
            Class="mt-0"></MudTextField>

        <MudTooltip Text="Refresh">
            <MudIconButton Variant="Variant.Filled"
                           Color="Color.Info"
                           Class="ml-4"
                           Icon="@(Icons.Material.Filled.Refresh)"
                           OnClick="HandleRefreshClicked" />
        </MudTooltip>
    </ToolBarContent>

    <Columns>
        <TemplateColumn T="DeviceDto"
                        Sortable="false"
                        Filterable="false"
                        ShowColumnOptions="false"
                        Title="Actions">

            <CellTemplate>
                <MudTooltip Text="Actions">
                    <MudMenu Variant="Variant.Filled" Color="Color.Primary" Icon="@(Icons.Material.Filled.MoreVert)">
                        @if (context.Item.IsOnline)
                        {
                            <MudMenuItem Icon="@(Icons.Material.Filled.ScreenShare)"
                                         IconColor="Color.Info"
                                         OnClick="@(() => RemoteControlClicked(context.Item))"
                                         OnTouch="@(() => RemoteControlClicked(context.Item))">
                                Remote Control
                            </MudMenuItem>
                            <MudMenuItem Icon="@(Icons.Material.Filled.Terminal)"
                                         IconColor="Color.Info"
                                         OnClick="@(() => StartTerminal(context.Item))"
                                         OnTouch="@(() => StartTerminal(context.Item))">
                                Terminal
                            </MudMenuItem>
                            <MudMenuItem Icon="@(Icons.Material.Filled.Settings)"
                                         IconColor="Color.Info"
                                         OnClick="@(() => ConfigureDeviceSettings(context.Item))"
                                         OnTouch="@(() => ConfigureDeviceSettings(context.Item))">
                                Configure
                            </MudMenuItem>

                            @if (IsAgentOutdated(context.Item))
                            {
                                <MudMenuItem Icon="@(Icons.Material.Filled.Update)"
                                             IconColor="Color.Warning"
                                             OnClick="@(() => UpdateDevice(context.Item))"
                                             OnTouch="@(() => UpdateDevice(context.Item))">
                                    Update
                                </MudMenuItem>
                            }

                            <MudMenuItem Icon="@(Icons.Material.Filled.PowerOff)"
                                         IconColor="Color.Error"
                                         OnClick="@(() => ShutdownDevice(context.Item))"
                                         OnTouch="@(() => ShutdownDevice(context.Item))">
                                Shutdown
                            </MudMenuItem>
                            <MudMenuItem Icon="@(Icons.Material.Filled.RestartAlt)"
                                         IconColor="Color.Error"
                                         OnClick="@(() => RestartDevice(context.Item))"
                                         OnTouch="@(() => RestartDevice(context.Item))">
                                Restart
                            </MudMenuItem>
                        }
                        else
                        {
                            <MudMenuItem Icon="@(Icons.Material.Filled.Visibility)"
                                         IconColor="Color.Success"
                                         OnClick="@(() => WakeDevice(context.Item))"
                                         OnTouch="@(() => WakeDevice(context.Item))">
                                Wake
                            </MudMenuItem>
                            <MudMenuItem Icon="@(Icons.Material.Filled.Delete)"
                                         IconColor="Color.Error"
                                         OnClick="@(() => RemoveDevice(context.Item))"
                                         OnTouch="@(() => RemoveDevice(context.Item))">
                                Remove
                            </MudMenuItem>
                        }
                    </MudMenu>
                </MudTooltip>
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn T="DeviceDto"
                        StickyLeft="true"
                        Title="Name">
            <CellTemplate>
                @if (string.IsNullOrWhiteSpace(context.Item.Alias))
                {
                    @(context.Item.Name)
                }
                else
                {
                    @($"{context.Item.Name} ({context.Item.Alias})")
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn T="DeviceDto"
                        Field="@(nameof(DeviceDto.IsOnline))"
                        Title="Online">
            <CellTemplate>
                @if (context.Item.IsOnline)
                {
                    if (IsAgentOutdated(context.Item))
                    {
                        <MudTooltip Text="Online (Outdated)">
                            <MudIcon Icon="@(Icons.Material.Filled.Warning)" Color="@(Color.Warning)" />
                        </MudTooltip>
                    }
                    else
                    {
                        <MudTooltip Text="Online">
                            <MudIcon Icon="@(Icons.Material.Filled.Check)" Color="@(Color.Success)" />
                        </MudTooltip>
                    }
                }
                else
                {
                    <MudTooltip Text="Offline">
                        <MudIcon Icon="@(Icons.Material.Filled.Cancel)" Color="@(Color.Error)" />
                    </MudTooltip>
                }
            </CellTemplate>
        </TemplateColumn>

        <PropertyColumn Property="x => x!.CurrentUser" Title="Current User" />

        <TemplateColumn T="DeviceDto" Title="CPU">
            <CellTemplate>
                @($"{Math.Round(context.Item.CpuUtilization * 100, 2)}%")
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn T="DeviceDto" Title="Memory">
            <CellTemplate>
                @($"{Math.Round(context.Item.UsedMemoryPercent * 100, 2)}%")
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn T="DeviceDto" Title="Storage">
            <CellTemplate>
                @($"{Math.Round(context.Item.UsedStoragePercent * 100, 2)}%")
            </CellTemplate>
        </TemplateColumn>

        <HierarchyColumn T="DeviceDto" />
    </Columns>
    <ChildRowContent>
        <div class="child-content-grid">
            <div>
                Total Memory:
            </div>
            <div>
                @($"{context.Item.TotalMemory:N2}") GB
            </div>
            <div>
                Total Storage:
            </div>
            <div>
                @($"{context.Item.TotalStorage:N0}") GB
            </div>
            <div>
                Agent Version:
            </div>
            <div>
                @(context.Item.AgentVersion)
            </div>
            <div>
                Last Seen:
            </div>
            <div>
                @(context.Item.LastSeen)
            </div>
            <div>
                Platform:
            </div>
            <div>
                @(context.Item.Platform)
            </div>
            <div>
                OS Description:
            </div>
            <div>
                @(context.Item.OsDescription)
            </div>
            <div>
                OS Architecture:
            </div>
            <div>
                @(context.Item.OsArchitecture)
            </div>
            <div>
                MAC Addresses:
            </div>
            <div>
                @(string.Join(", ", context.Item.MacAddresses))
            </div>
        </div>
    </ChildRowContent>
</MudDataGrid>
