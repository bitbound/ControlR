@inject IMessenger Messenger
@inject IAppState AppState

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
        Home
    </MudNavLink>
    <MudNavLink Href="keys" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Key" Disabled="!AppState.IsAuthenticated">
        Keys
    </MudNavLink>
    <MudNavLink Href="deploy" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.RocketLaunch" Disabled="!AppState.IsAuthenticated">
        Deploy
    </MudNavLink>
    <MudNavLink Href="logs" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.DocumentScanner">
        Logs
    </MudNavLink>
    <MudNavLink Href="settings" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Settings">
        Settings
    </MudNavLink>
    @if (AppState.IsServerAdministrator)
    {
        <MudNavLink Href="server-admin" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AdminPanelSettings">
            Server Admin
        </MudNavLink>
    }
    <MudNavLink Href="about" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.QuestionMark">
        About
    </MudNavLink>
</MudNavMenu>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        Messenger.RegisterGenericMessage(this, HandleGenericMessage);
    }

    private async Task HandleGenericMessage(object subscriber, GenericMessageKind kind)
    {
        switch (kind)
        {
            case GenericMessageKind.KeysStateChanged:
            case GenericMessageKind.IsServerAdminChanged:
                await InvokeAsync(StateHasChanged);
                break;
            default: 
                break;
        }
    }
}
