@inject IBrowser Browser

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.subtitle1" Color="Color.Info" GutterBottom>
            Connect To @(DeviceName)
        </MudText>

        <MudCard Class="mb-3" Outlined>
            <MudCardContent>
                <div>
                    <MudTextField Value="Password"
                                Label="Password"
                                ReadOnly
                                Variant="Variant.Text"
                                Adornment="Adornment.End"
                                InputType="@(_passwordInputType)"
                                AdornmentIcon="@(_passwordInputIcon)"
                                OnAdornmentClick="VisibilityButtonClicked"
                                AdornmentAriaLabel="Show Password" />

                 </div>
                 <div>
                     <MudText Typo="Typo.caption" Color="Color.Secondary">
                         Note: Password should already be in your clipboard.
                     </MudText>
                 </div>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(Submit)">
                    Connect
                </MudButton>
            </MudCardActions>
        </MudCard>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

 @code {
    private InputType _passwordInputType = InputType.Password;
    private string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
    private bool _isPasswordShown = false;

    [CascadingParameter]
    public required MudDialogInstance MudDialog { get; init; }

    [Parameter]
    [EditorRequired]
    public required string DeviceName { get; init; }

    [Parameter]
    [EditorRequired]
    public required string Password { get; init; }

    [Parameter]
    [EditorRequired]
    public required Guid SessionId { get; init; }

    private void Cancel() => MudDialog.Cancel();
    private void Submit()
    {
        Browser.OpenAsync($"{AppConstants.ServerUri}/novnc/vnc.html?path=novnc-proxy/{SessionId}");
        MudDialog.Close();
    }

    private void VisibilityButtonClicked()
    {
        @if (_isPasswordShown)
        {
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInputType = InputType.Password;
        }
        else
        {
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInputType = InputType.Text;
        }
        _isPasswordShown = !_isPasswordShown;
    }
}