@inherits JsInteropableComponent

<div @ref="_outerFrameElement" class="h-100 @(OuterClass)">
  <input @ref="_virtualKeyboard"
         class="virtual-keyboard"
         type="text"
         autocomplete="off"
         autocapitalize="off"
         @onblur="HandleVirtualKeyboardBlurred"
         @bind-value="VirtualKeyboardText"
         @bind-value:event="oninput"
         @onkeydown="OnVkKeyDown" />

  <div class="display-grid">
    <div class="action-bar pa-2">
      <ViewModeMenu />

      <DisplaysMenu Displays="@RemoteControlState.DisplayData" SelectedDisplay="RemoteControlState.SelectedDisplay" OnDisplaySelected="ChangeDisplays" />

      <ClipboardMenu OnReceiveClipboardClicked="HandleReceiveClipboardClicked"
                     OnSendClipboardClicked="HandleSendClipboardClicked"
                     OnTypeClipboardClicked="HandleTypeClipboardClicked" />

      @if (DeviceState.CurrentDeviceMaybe?.Platform == SystemPlatform.Windows)
      {
        <MudTooltip Text="Ctrl+Alt+Del" Placement="Placement.Right" Class="z9002">
          @if (CurrentBreakpoint < Breakpoint.Sm)
          {
            <MudIconButton Icon="@(Icons.Material.Filled.Shield)"
                          Variant="Variant.Outlined"
                          Size="Size.Small"
                          OnClick="InvokeCtrlAltDel" />
          }
          else
          {
            <MudButton Variant="Variant.Outlined"
                      StartIcon="@(Icons.Material.Filled.Shield)"
                      Size="Size.Small"
                      OnClick="InvokeCtrlAltDel">
              Ctrl+Alt+Del
            </MudButton>
          }
        </MudTooltip>
      }


      @if (_controlMode == ControlMode.Touch)
      {
        <MudDivider Vertical FlexItem />

        <MudTooltip Text="Virtual Keyboard" Placement="Placement.Right" Class="z9002">
          <MudToggleIconButton Variant="Variant.Outlined"
                               Icon="@(Icons.Material.Filled.Keyboard)"
                               Size="Size.Small"
                               ToggledColor="Color.Success"
                               ToggledIcon="@(Icons.Material.Filled.Keyboard)"
                               Toggled="RemoteControlState.IsVirtualKeyboardToggled"
                               ToggledChanged="HandleKeyboardToggled" />
        </MudTooltip>

        <MudTooltip Text="Scroll Mode" Placement="Placement.Right" Class="z9002">
          <MudToggleIconButton Variant="Variant.Outlined"
                               Icon="@(Icons.Material.Filled.UnfoldMoreDouble)"
                               Size="Size.Small"
                               ToggledColor="Color.Success"
                               ToggledIcon="@(Icons.Material.Filled.UnfoldMoreDouble)"
                               Toggled="RemoteControlState.IsScrollModeToggled"
                               ToggledChanged="HandleScrollModeToggled" />
        </MudTooltip>
      }

      <MudFlexBreak />

      <MudTooltip Text="Metrics" Placement="Placement.Left" Class="z9002">
        <MudToggleIconButton Variant="Variant.Outlined"
                             Icon="@(Icons.Material.Filled.QueryStats)"
                             Size="Size.Small"
                             ToggledColor="Color.Success"
                             ToggledIcon="@(Icons.Material.Filled.QueryStats)"
                             Toggled="RemoteControlState.IsMetricsEnabled"
                             ToggledChanged="HandleMetricsToggled" />
      </MudTooltip>

      <MudTooltip Text="Toggle Fullscreen" Placement="Placement.Left" Class="z9002">
        <MudIconButton Icon="@(Icons.Material.Filled.Fullscreen)"
                       Variant="Variant.Outlined"
                       Size="Size.Small"
                       OnClick="HandleFullscreenClicked" />
      </MudTooltip>

      <MudTooltip Text="Close Connection" Placement="Placement.Right" Class="z9002">
        <MudIconButton Icon="@(Icons.Material.Filled.Close)"
                       Variant="Variant.Outlined"
                       Size="Size.Small"
                       Color="Color.Error"
                       OnClick="HandleDisconnectClicked" />
      </MudTooltip>

    </div>
    <div class="screen-area"
         @ref="_screenArea"
         @ontouchstart="OnTouchStart"
         @ontouchmove="OnTouchMove"
         @ontouchcancel="OnTouchCancel"
         @ontouchend="OnTouchEnd">

      <canvas id="@_canvasId"
              @ref="_canvasRef"
              width="@(RemoteControlState.SelectedDisplay?.Width ?? 0)"
              height="@(RemoteControlState.SelectedDisplay?.Height ?? 0)"
              class='@($"remote-screen {CanvasClasses}")'
              style="@(CanvasStyle)"></canvas>
    </div>
  </div>

  @if (RemoteControlState.IsMetricsEnabled)
  {
    <div class="metrics-frame">
      @if (_latestCaptureMetrics is null)
      {
        <MudText Typo="Typo.h5">
          Loading
        </MudText>
      }
      else
      {
        <div>
          Mbps:
        </div>
        <div>
          @($"{_latestCaptureMetrics.Mbps:N2}")
        </div>

        <div>
          FPS:
        </div>
        <div>
          @($"{_latestCaptureMetrics.Fps:N2}")
        </div>

        <div>
          GPU:
        </div>
        <div>
          @(_latestCaptureMetrics.IsUsingGpu)
        </div>

        <div>
          Latency:
        </div>
        <div>
          @($"{_latestCaptureMetrics.Latency.TotalMilliseconds:N2} ms")
        </div>


        <div>
          Image Quality:
        </div>
        <div>
          @(_latestCaptureMetrics.ImageQuality)
        </div>

        @foreach (var kvp in _latestCaptureMetrics.ExtraData)
        {
          <div>
            @(kvp.Key):
          </div>
          <div>
            @(kvp.Value)
          </div>
        }
      }
    </div>
  }

</div>
