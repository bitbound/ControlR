@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
  <MudNavLink Disabled="@IsDisabled" Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
  <MudNavLink Disabled="@IsDisabled" Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
  <MudNavLink Disabled="@IsDisabled" Href="weather" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Weather</MudNavLink>
  <MudNavLink Disabled="@IsDisabled" Href="auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lock">Auth Required</MudNavLink>
  <AuthorizeView>
    <Authorized>
      <MudNavLink Disabled="@IsDisabled" Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@context.User.Identity?.Name</MudNavLink>
      <form action="Account/Logout" method="post">
        <AntiforgeryToken />
        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
        <button type="submit" class="mud-nav-link mud-ripple">
          <MudIcon Icon="@Icons.Material.Filled.Logout" Color="Color.Info" Class="mr-3"></MudIcon> Logout
        </button>
      </form>
    </Authorized>
    <NotAuthorized>
      <MudNavLink Disabled="@IsDisabled" Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Register</MudNavLink>
      <MudNavLink Disabled="@IsDisabled" Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">Login</MudNavLink>
    </NotAuthorized>
  </AuthorizeView>
</MudNavMenu>


@code {
  private string? currentUrl;

  [Parameter]
  public bool IsDisabled { get; set; }

  protected override void OnInitialized()
  {
    currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    NavigationManager.LocationChanged += OnLocationChanged;
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    StateHasChanged();
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }
}


