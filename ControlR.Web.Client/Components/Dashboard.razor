<div>
  @if (!_loading && _anyDevicesForUser == false)
  {
    <MudAlert Severity="Severity.Info">
      No devices found. Head over to the <MudLink Color="Color.Tertiary" Href="/deploy">Deploy Page</MudLink>
      to install an agent!
    </MudAlert>
  }

  <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom>
    Devices
  </MudText>

  <div class="top-controls-grid">
    <div>
      <UserTagsSelector SelectedTagsChanged="OnSelectedTagsChanged" />
    </div>
    <div>
      <MudCheckBox T="bool" Value="_hideOfflineDevices" ValueChanged="HideOfflineDevicesChanged"
        Label="Hide Offline Devices" Disabled="ShouldBypassHideOfflineDevices" />
    </div>
  </div>

  <MudDataGrid T="DeviceViewModel" @ref="_dataGrid" ServerData="LoadServerData" RowsPerPage="@(25)"
    SortMode="SortMode.Multiple" Loading="_loading" Hideable="true" SortDefinitions="_sortDefinitions"
    ShowColumnOptions="true" Filterable="true">

    <ToolBarContent>
      <MudSpacer />

      <MudTextField T="string" Value="@_searchText" ValueChanged="OnSearch" Placeholder="Search" Clearable
        Adornment="Adornment.Start" Immediate DebounceInterval="500" AdornmentIcon="@Icons.Material.Filled.Search"
        IconSize="Size.Medium" Class="mt-0">
      </MudTextField>

      <MudTooltip Text="Refresh">
        <MudIconButton Variant="Variant.Outlined" Color="Color.Info" Class="ml-4"
          Icon="@(Icons.Material.Filled.Refresh)" OnClick="HandleRefreshClicked" />
      </MudTooltip>
    </ToolBarContent>

    <Columns>
      <TemplateColumn T="DeviceViewModel" Sortable="false" Filterable="false" ShowColumnOptions="false" Title="Actions">
        <CellTemplate>
          <MudTooltip Text="Actions">
            <MudMenu Variant="Variant.Outlined" Color="Color.Primary" Icon="@(Icons.Material.Filled.MoreVert)">

              <MudMenuItem Icon="@(Icons.Material.Filled.Computer)" IconColor="Color.Info"
                           OnClick="@(() => LaunchDeviceAccess(context.Item))">
                Remote Access
              </MudMenuItem>

              @if (context.Item.IsOnline)
              {
                <MudMenuItem Icon="@(Icons.Material.Filled.ScreenShare)" IconColor="Color.Info"
                  OnClick="@(() => LaunchRemoteControl(context.Item))">
                  Remote Control
                </MudMenuItem>

                @if (context.Item.Platform == SystemPlatform.Linux)
                {
                  <MudMenuItem Icon="@(Icons.Material.Filled.ConnectedTv)" IconColor="Color.Info"
                    OnClick="@(() => VncConnectClicked(context.Item))">
                    VNC Proxy
                  </MudMenuItem>
                }

                @if (context.Item.Platform == SystemPlatform.MacOs)
                {
                  <MudMenuItem Icon="@(Icons.Material.Filled.ConnectedTv)" IconColor="Color.Info"
                    OnClick="@(() => VncConnectClicked(context.Item))">
                    Apple ScreenShare
                  </MudMenuItem>
                }

                <MudMenuItem Icon="@(Icons.Material.Filled.Refresh)" IconColor="Color.Success"
                  OnClick="@(() => RefreshDeviceInfo(context.Item))">
                  Refresh
                </MudMenuItem>

                @if (context.Item.IsOutdated)
                {
                  <MudMenuItem Icon="@(Icons.Material.Filled.Update)" IconColor="Color.Warning"
                    OnClick="@(() => UpdateDevice(context.Item.Id))">
                    Update
                  </MudMenuItem>
                }

                <MudMenuItem Icon="@(Icons.Material.Filled.PowerOff)" IconColor="Color.Error"
                  OnClick="@(() => ShutdownDevice(context.Item))">
                  Shutdown
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.RestartAlt)" IconColor="Color.Error"
                  OnClick="@(() => RestartDevice(context.Item))">
                  Restart
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.DeleteForever)" IconColor="Color.Error"
                  OnClick="@(() => UninstallAgent(context.Item))">
                  Delete
                </MudMenuItem>
              }
              else
              {
                <MudMenuItem Icon="@(Icons.Material.Filled.Visibility)" IconColor="Color.Success"
                  OnClick="@(() => WakeDevice(context.Item))">
                  Wake
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.Delete)" IconColor="Color.Error"
                  OnClick="@(() => RemoveDevice(context.Item))">
                  Remove
                </MudMenuItem>
              }
            </MudMenu>
          </MudTooltip>
        </CellTemplate>
      </TemplateColumn>

      <PropertyColumn Title="Name" Property="x => x.Name" Sortable="true" Filterable="true" StickyLeft="true">
        <CellTemplate>
          @if (string.IsNullOrWhiteSpace(context.Item.Alias))
          {
            @(context.Item.Name)
          }
          else
          {
            @($"{context.Item.Name} ({context.Item.Alias})")
          }
        </CellTemplate>

      </PropertyColumn>

      <PropertyColumn Property="@(x => x.IsOnline)" Sortable="true" Filterable="true" Title="Online">
        <CellTemplate>
          @if (context.Item.IsOnline)
          {
            if (context.Item.IsOutdated)
            {
              <MudTooltip Text="Online (Outdated)">
                <MudIcon Icon="@(Icons.Material.Filled.Warning)" Color="@(Color.Warning)" />
              </MudTooltip>
            }
            else
            {
              <MudTooltip Text="Online">
                <MudIcon Icon="@(Icons.Material.Filled.Check)" Color="@(Color.Success)" />
              </MudTooltip>
            }
          }
          else
          {
            <MudTooltip Text="Offline">
              <MudIcon Icon="@(Icons.Material.Filled.Cancel)" Color="@(Color.Error)" />
            </MudTooltip>
          }
        </CellTemplate>
      </PropertyColumn>
      <PropertyColumn Property="@(x => x.Platform)" Sortable="true" Filterable="true" Title="Platform">
        <CellTemplate>
          @switch (context.Item.Platform)
          {
            case SystemPlatform.Windows:
              <MudTooltip Text="Windows">
                <MudIcon Icon="@(Icons.Custom.Brands.MicrosoftWindows)" Color="Color.Info" />
              </MudTooltip>
              ;
              break;
            case SystemPlatform.MacOs:
              <MudTooltip Text="macOS">
                <MudIcon Icon="@(Icons.Custom.Brands.Apple)" Color="Color.Info" />
              </MudTooltip>
              ;
              break;
            case SystemPlatform.Linux:
              <MudTooltip Text="Linux">
                <MudIcon Icon="@(Icons.Custom.Brands.Linux)" Color="Color.Info" />
              </MudTooltip>
              ;
              break;
            default:
              <MudTooltip Text="Unknown Platform">
                <MudIcon Icon="@Icons.Material.Filled.Help" Color="Color.Warning" />
              </MudTooltip>
              ;
              break;
          }
        </CellTemplate>
      </PropertyColumn>

      <PropertyColumn Property="x => x!.CurrentUsers" Title="Current Users" Sortable="false" Filterable="false">
        <CellTemplate>
          @(string.Join(", ", context.Item.CurrentUsers))
        </CellTemplate>
      </PropertyColumn>

      <PropertyColumn Property="@(x => x.CpuUtilization)" Title="CPU" Sortable="true" Filterable="true">
        <CellTemplate>
          @($"{Math.Round(context.Item.CpuUtilization * 100, 2)}%")
        </CellTemplate>
      </PropertyColumn>

      <PropertyColumn Property="@(x => x.UsedMemoryPercent)" Title="Memory" Sortable="true" Filterable="true">
        <CellTemplate>
          @($"{Math.Round(context.Item.UsedMemoryPercent * 100, 2)}%")
        </CellTemplate>
      </PropertyColumn>

      <PropertyColumn Property="@(x => x.UsedStoragePercent)" Title="Storage" Sortable="true" Filterable="true">
        <CellTemplate>
          @($"{Math.Round(context.Item.UsedStoragePercent * 100, 2)}%")
        </CellTemplate>
      </PropertyColumn>
    </Columns>

    <PagerContent>
      <MudDataGridPager T="DeviceViewModel" />
    </PagerContent>
  </MudDataGrid>
</div>