<div>
  @if (!_loading && DeviceStore.Items.Count == 0)
  {
    <MudAlert Severity="Severity.Info">
      No devices found. Head over to the <MudLink Color="Color.Tertiary" Href="/deploy">Deploy Page</MudLink>
      to install an agent!
    </MudAlert>
  }

  <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom>
    Devices
  </MudText>

  <div class="d-inline-block">
    <MudCheckBox T="bool"
                 Value="_hideOfflineDevices"
                 ValueChanged="HideOfflineDevicesChanged"
                 Label="Hide Offline Devices"
                 Disabled="IsHideOfflineDevicesDisabled" />
  </div>

  <MudDataGrid T="DeviceViewModel"
               RowsPerPage="@(25)"
               Items="FilteredDevices"
               SortMode="SortMode.Multiple"
               QuickFilter="QuickFilter"
               Loading="_loading"
               Hideable="true"
               SortDefinitions="_sortDefinitions"
               ShowColumnOptions="true"
               Filterable="true">

    <ToolBarContent>
      <MudSpacer />
      <MudTextField T="string"
                    @bind-Value="_searchText"
                    Placeholder="Search"
                    Clearable
                    Adornment="Adornment.Start"
                    Immediate
                    DebounceInterval="500"
                    AdornmentIcon="@Icons.Material.Filled.Search"
                    IconSize="Size.Medium"
                    Class="mt-0">
      </MudTextField>

      <MudTooltip Text="Refresh">
        <MudIconButton Variant="Variant.Outlined"
                       Color="Color.Info"
                       Class="ml-4"
                       Icon="@(Icons.Material.Filled.Refresh)"
                       OnClick="HandleRefreshClicked" />
      </MudTooltip>
    </ToolBarContent>

    <Columns>
      <TemplateColumn T="DeviceViewModel"
                      Sortable="false"
                      Filterable="false"
                      ShowColumnOptions="false"
                      Title="Actions">

        <CellTemplate>
          <MudTooltip Text="Actions">
            <MudMenu Variant="Variant.Outlined" Color="Color.Primary" Icon="@(Icons.Material.Filled.MoreVert)">
              @if (context.Item.IsOnline)
              {
                <MudMenuItem Icon="@(Icons.Material.Filled.ScreenShare)"
                             IconColor="Color.Info"
                             OnClick="@(() => RemoteControlClicked(context.Item))">
                  Remote Control
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.Terminal)"
                             IconColor="Color.Info"
                             OnClick="@(() => StartTerminal(context.Item))">
                  Terminal
                </MudMenuItem>
                @*<MudMenuItem Icon="@(Icons.Material.Filled.Edit)"
                             IconColor="Color.Info"
                             OnClick="@(() => EditDevice(context.Item))">
                  Edit
                </MudMenuItem> \*@

                <MudMenuItem Icon="@(Icons.Material.Filled.Refresh)"
                             IconColor="Color.Success"
                             OnClick="@(() => RefreshDeviceInfo(context.Item))">
                  Refresh
                </MudMenuItem>

                @if (context.Item.IsOutdated)
                {
                  <MudMenuItem Icon="@(Icons.Material.Filled.Update)"
                               IconColor="Color.Warning"
                               OnClick="@(() => UpdateDevice(context.Item.Id))">
                    Update
                  </MudMenuItem>
                }

                <MudMenuItem Icon="@(Icons.Material.Filled.PowerOff)"
                             IconColor="Color.Error"
                             OnClick="@(() => ShutdownDevice(context.Item))">
                  Shutdown
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.RestartAlt)"
                             IconColor="Color.Error"
                             OnClick="@(() => RestartDevice(context.Item))">
                  Restart
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.DeleteForever)"
                             IconColor="Color.Error"
                             OnClick="@(() => UninstallAgent(context.Item))">
                  Delete
                </MudMenuItem>
              }
              else
              {
                <MudMenuItem Icon="@(Icons.Material.Filled.Visibility)"
                             IconColor="Color.Success"
                             OnClick="@(() => WakeDevice(context.Item))">
                  Wake
                </MudMenuItem>
                <MudMenuItem Icon="@(Icons.Material.Filled.Delete)"
                             IconColor="Color.Error"
                             OnClick="@(() => RemoveDevice(context.Item))">
                  Remove
                </MudMenuItem>
              }
            </MudMenu>
          </MudTooltip>
        </CellTemplate>
      </TemplateColumn>

      <TemplateColumn T="DeviceViewModel"
                      StickyLeft="true"
                      Sortable="true"
                      Filterable="true"
                      SortBy="@(x => x.Name)"
                      Title="Name">
        <CellTemplate>
          @if (string.IsNullOrWhiteSpace(context.Item.Alias))
          {
            @(context.Item.Name)
          }
          else
          {
            @($"{context.Item.Name} ({context.Item.Alias})")
          }
        </CellTemplate>
      </TemplateColumn>

      <TemplateColumn T="DeviceViewModel"
                      Sortable="true"
                      SortBy="@(x => x.IsOnline)"
                      Filterable="true"
                      Title="Online">
        <CellTemplate>
          @if (context.Item.IsOnline)
          {
            if (context.Item.IsOutdated)
            {
              <MudTooltip Text="Online (Outdated)">
                <MudIcon Icon="@(Icons.Material.Filled.Warning)" Color="@(Color.Warning)" />
              </MudTooltip>
            }
            else
            {
              <MudTooltip Text="Online">
                <MudIcon Icon="@(Icons.Material.Filled.Check)" Color="@(Color.Success)" />
              </MudTooltip>
            }
          }
          else
          {
            <MudTooltip Text="Offline">
              <MudIcon Icon="@(Icons.Material.Filled.Cancel)" Color="@(Color.Error)" />
            </MudTooltip>
          }
        </CellTemplate>
      </TemplateColumn>

      <PropertyColumn Property="x => x!.CurrentUsers"
                      Title="Current Users"
                      Sortable="false"
                      Filterable="false">
        <CellTemplate>
          @(string.Join(", ", context.Item.CurrentUsers))
        </CellTemplate>
      </PropertyColumn>

      <TemplateColumn T="DeviceViewModel"
                      Title="CPU"
                      Sortable="true"
                      SortBy="@(x => x.CpuUtilization)"
                      Filterable="true">
        <CellTemplate>
          @($"{Math.Round(context.Item.CpuUtilization * 100, 2)}%")
        </CellTemplate>
      </TemplateColumn>

      <TemplateColumn T="DeviceViewModel"
                      Title="Memory"
                      Sortable="true"
                      SortBy="@(x => x.UsedMemoryPercent)"
                      Filterable="true">
        <CellTemplate>
          @($"{Math.Round(context.Item.UsedMemoryPercent * 100, 2)}%")
        </CellTemplate>
      </TemplateColumn>

      <TemplateColumn T="DeviceViewModel"
                      Title="Storage"
                      Sortable="true"
                      SortBy="@(x => x.UsedStoragePercent)"
                      Filterable="true">
        <CellTemplate>
          @($"{Math.Round(context.Item.UsedStoragePercent * 100, 2)}%")
        </CellTemplate>
      </TemplateColumn>
      <HierarchyColumn T="DeviceViewModel" />
    </Columns>


    <ChildRowContent>
      <MudGrid>
        <MudItem xs="12" sm="6" md="4" Class="text-center">
          <MudText Typo="Typo.h6" GutterBottom Color="Color.Primary">
            Device Summary
          </MudText>
          <div class="child-content-grid">
            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Name:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.Name
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Id:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.Id
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Alias:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.Alias
            </MudText>


            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Agent Version:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.AgentVersion
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Last Seen:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.LastSeen.ToLocalTime()
            </MudText>
          </div>
        </MudItem>

        <MudItem xs="12" sm="6" md="4" Class="text-center">
          <MudText Typo="Typo.h6" GutterBottom Color="Color.Primary">
            Hardware
          </MudText>
          <div class="child-content-grid">
            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              CPU Count:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.ProcessorCount
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Architecture:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.OsArchitecture
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Total Memory:
            </MudText>
            <MudText Typo="Typo.body1">
              @(context.Item.TotalMemory.ToString("N2")) GB
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              Total Storage (OS):
            </MudText>
            <MudText Typo="Typo.body1">
              @(context.Item.TotalStorage.ToString("N0")) GB
            </MudText>
          </div>
        </MudItem>
        <MudItem xs="12" sm="6" md="4" Class="text-center">
          <MudText Typo="Typo.h6" GutterBottom Color="Color.Primary">
            Networking
          </MudText>
          <div class="child-content-grid">
            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              IPv4 Address:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.PublicIpV4
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              IPv6 Address:
            </MudText>
            <MudText Typo="Typo.body1">
              @context.Item.PublicIpV6
            </MudText>

            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
              MAC Addresses:
            </MudText>
            <MudText Typo="Typo.body1">
              @(string.Join(", ", context.Item.MacAddresses))
            </MudText>
          </div>
        </MudItem>

        <MudItem xs="12" sm="6" md="4" Class="text-center">
          <MudText Typo="Typo.h6" GutterBottom Color="Color.Primary">
            CPU Usage
          </MudText>
          <RadialGauge Value="@(context.Item.CpuUtilization)" 
                        MaxValue="1"
                       Width="250px"
                      Height="250px">
            <MudText Typo="Typo.body1">
              @(Math.Round(context.Item.CpuUtilization * 100, 2))%
            </MudText>
          </RadialGauge>

        </MudItem>

        <MudItem xs="12" sm="6" md="4" Class="text-center">
          <MudText Typo="Typo.h6" GutterBottom Color="Color.Primary">
            Memory Usage
          </MudText>
          <RadialGauge Value="@(context.Item.UsedMemoryPercent)"
                       MaxValue="1"
                       Height="250px"
                       Width="250px"
                       Class="text-center">
            <MudText Typo="Typo.body1">
              @(Math.Round(context.Item.UsedMemoryPercent * 100, 2))%
            </MudText>
          </RadialGauge>
        </MudItem>


        @foreach (var drive in context.Item.Drives)
        {
          <MudItem xs="12" sm="6" md="4" Class="text-center">
            <MudText Typo="Typo.h6" Color="Color.Primary" Class="ellipsis-text">
              Hard Drive
            </MudText>
            <MudChart ChartType="ChartType.Donut"
                      Width="250px"
                      Height="250px"
                      InputData="@(new double[]{ drive.TotalSize - drive.FreeSpace, drive.FreeSpace})"
                      InputLabels='@(new string[] { $"Used Space ({drive.UsedSpacePercentFormatted})", $"Free Space ({drive.FreeSpacePercentFormatted})" })'>
              <CustomGraphics>
                <text x="50%" y="40%" dominant-baseline="middle" text-anchor="middle" fill="white" font-family="Helvetica" font-size="2">
                  Total
                </text>
                <text x="50%" y="55%" dominant-baseline="middle" text-anchor="middle" fill="white" font-family="Helvetica" font-size="4">
                  @(drive.TotalSize.ToString("N0")) GB
                </text>
              </CustomGraphics>
            </MudChart>
            <div class="child-content-grid">
              <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
                Name:
              </MudText>
              <MudTooltip Text="@drive.Name">
                <MudText Typo="Typo.body1" Class="ellipsis-text">
                  @drive.Name
                </MudText>
              </MudTooltip>

              <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
                Volume Label:
              </MudText>
              <MudTooltip Text="@drive.VolumeLabel">
                <MudText Typo="Typo.body1" Class="ellipsis-text">
                  @drive.VolumeLabel
                </MudText>
              </MudTooltip>

              <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
                Format:
              </MudText>
              <MudText Typo="Typo.body1">
                @drive.DriveFormat
              </MudText>

              <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
                Root Directory:
              </MudText>
              <MudTooltip Text="@drive.RootDirectory">
                <MudText Typo="Typo.body1" Class="ellipsis-text">
                  @drive.RootDirectory
                </MudText>
              </MudTooltip>
            </div>

          </MudItem>
        }

      </MudGrid>
    </ChildRowContent>
    <PagerContent>
      <MudDataGridPager T="DeviceViewModel" />
    </PagerContent>
  </MudDataGrid>
</div>