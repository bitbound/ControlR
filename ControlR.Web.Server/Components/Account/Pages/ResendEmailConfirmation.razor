@page "/Account/ResendEmailConfirmation"

@inject UserManager<AppUser> UserManager
@inject IEmailSender<AppUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Resend email confirmation</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Resend email confirmation</MudText>

<MudText Typo="Typo.body1" GutterBottom="true">Enter your email.</MudText>

<StatusMessage Message="@_message"/>

<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
  <DataAnnotationsValidator/>

  <MudGrid>
    <MudItem xs="12">
      <MudStaticTextField For="@(() => Input.Email)" @bind-Value="Input.Email"
                          Label="Email" Placeholder="name@example.com"
                          UserAttributes="@(new Dictionary<string, object?> { { "autocomplete", "true" }, { "aria-required", "true" } })"/>
    </MudItem>
    <MudItem xs="12">
      <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" FormAction="FormAction.Submit">Resend</MudStaticButton>
    </MudItem>
  </MudGrid>
</EditForm>

@code {
  private string? _message;

  [SupplyParameterFromForm]
  private InputModel Input { get; set; } = new();

  private async Task OnValidSubmitAsync()
  {
    var user = await UserManager.FindByEmailAsync(Input.Email!);
    if (user is null)
    {
      _message = "Verification email sent. Please check your email.";
      return;
    }

    var userId = await UserManager.GetUserIdAsync(user);
    var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
    code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
    var callbackUrl = NavigationManager.GetUriWithQueryParameters(
      NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
      new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
    await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

    _message = "Verification email sent. Please check your email.";
  }

  private sealed class InputModel
  {
    [Required]
    [EmailAddress]
    public string Email { get; set; } = "";
  }

}