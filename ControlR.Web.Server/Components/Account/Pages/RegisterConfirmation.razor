@page "/Account/RegisterConfirmation"

@inject UserManager<AppUser> UserManager
@inject IEmailSender<AppUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register confirmation</PageTitle>

<MudText Typo="Typo.h3" GutterBottom>
  Register confirmation
</MudText>

<StatusMessage Message="@_statusMessage"/>

<MudText Typo="Typo.body1" GutterBottom Class="mt-2">
  Please check your email to confirm your account.
</MudText>

@code {
  private string? _statusMessage;

  [CascadingParameter]
  private HttpContext HttpContext { get; set; } = default!;

  [SupplyParameterFromQuery]
  private string? Email { get; set; }

  [SupplyParameterFromQuery]
  private string? ReturnUrl { get; set; }

  protected override async Task OnInitializedAsync()
  {
    if (Email is null)
    {
      RedirectManager.RedirectTo("");
    }

    var user = await UserManager.FindByEmailAsync(Email);
    if (user is null)
    {
      HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
      _statusMessage = "Error finding user for unspecified email";
    }
  }
}